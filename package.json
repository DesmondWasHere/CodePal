{
	"name": "codepal",
	"displayName": "CodePal",
	"description": "A VS Code extension to help codeforces users upsolve and give contests conveniently and swiftly",
	"license": "GPL-3.0-or-later",
	"repository": {
		"type": "git",
		"url": "https://github.com/IEEE-NITK/CodePal"
	},
	"publisher": "IEEE-NITK",
	"icon": "res/svg/logo.png",
	"version": "0.0.3",
	"engines": {
		"vscode": "^1.52.0"
	},
	"categories": [
		"Other"
	],
	"activationEvents": [
		"*"
	],
	"main": "./dist/extension.js",
	"contributes": {
		"commands": [
			{
				"command": "codepal.helloWorld",
				"title": "Hello World"
			},
			{
				"command": "codepal.reloadContests",
				"title": "Refresh contest list",
				"icon": "res/svg/refresh.svg"
			},
			{
				"command": "codepal.getProblemFilters",
				"title": "Filter",
				"icon": "res/svg/filter.svg"
			},
			{
				"command": "codepal.reloadProblems",
				"title": "Refresh problem list",
				"icon": "res/svg/refresh.svg"
			},
			{
				"command": "codepal.createContestDirectory",
				"title": "Create Contest Folder",
				"icon": "res/svg/CreateFolder.png"
			},
			{
				"command": "codepal.registerContest",
				"title": "Register for this contest",
				"icon": "res/svg/registerContest.jpeg"
			},
			{
				"command": "codepal.createProblemDirectory",
				"title": "Create Problem Folder",
				"icon": "res/svg/CreateFolder.png"
			},
			{
				"command": "codepal.createContestProblemDirectory",
				"title": "Create only this problem Folder",
				"icon": "res/svg/CreateFolder.png"
			},
			{
				"command": "codepal.runTestCases",
				"title": "Run Test Cases",
				"icon": "res/svg/play_button.png"
			},
			{
				"command": "codepal.addTestCases",
				"title": "Add Test Cases",
				"icon": "res/svg/add_TestCase.png"
			},
			{
				"command": "codepal.openProblemStatement",
				"title": "Open Problem Statement",
				"icon": "res/svg/question_mark.png"
			},
			{
				"command": "codepal.submitProblem",
				"title": "Submit Problem",
				"icon": "res/svg/upload.png"
			},
			{
				"command": "codepal.createStressTestingFiles",
				"title": "Create Stress Testing Files",
				"icon": "res/svg/createFile.png"
			},
			{
				"command": "codepal.stressTest",
				"title": "Stress Test",
				"icon": "res/svg/stress_test.png"
			},
			{
				"command": "codePal.stopStressTesting",
				"title": "Stop Stress Testing"
			}
		],
		"viewsContainers": {
			"activitybar": [
				{
					"id": "codepal",
					"title": "CodePal",
					"icon": "res/svg/brackets.svg"
				}
			]
		},
		"views": {
			"codepal": [
				{
					"id": "codepalContests",
					"name": "Contests",
					"icon": "res/svg/icon.svg",
					"contextualTitle": "Contests",
					"visibility": "collapsed"
				},
				{
					"id": "codepalProblems",
					"name": "Problems",
					"icon": "res/svg/icon.svg",
					"contextualTitle": "Problems",
					"visibility": "collapsed"
				}
			]
		},
		"menus": {
			"view/title": [
				{
					"command": "codepal.reloadContests",
					"when": "view == codepalContests",
					"group": "navigation"
				},
				{
					"command": "codepal.getProblemFilters",
					"when": "view == codepalProblems",
					"group": "navigation"
				},
				{
					"command": "codepal.reloadProblems",
					"when": "view == codepalProblems",
					"group": "navigation"
				}
			],
			"view/item/context": [
				{
					"command": "codepal.createContestDirectory",
					"when": "view == codepalContests && viewItem==contest",
					"group": "inline"
				},
				{
					"command": "codepal.registerContest",
					"when": "view == codepalContests && viewItem==FutureContest",
					"group": "inline"
				},
				{
					"command": "codepal.createProblemDirectory",
					"when": "view == codepalProblems && viewItem==problem",
					"group": "inline"
				},
				{
					"command": "codepal.createContestProblemDirectory",
					"when": "view == codepalContests && viewItem==contestproblem",
					"group": "inline"
				}
			],
			"editor/title": [
				{
					"when": "resourceExtname == .cpp || resourceExtname == .c || resourceExtname == .py || resourceExtname == .java",
					"command": "codepal.runTestCases",
					"group": "navigation"
				},
				{
					"when": "resourceExtname == .cpp || resourceExtname == .c || resourceExtname == .py || resourceExtname == .java",
					"command": "codepal.addTestCases",
					"group": "navigation"
				},
				{
					"when": "resource =~ '/.*[A-Z][1-9]?_.*/[A-Z][1-9]?_.*\\.cpp$/' || resource =~ '/.*[A-Z][1-9]?_.*/[A-Z][1-9]?_.*\\.c$/' || resource =~ '/.*[A-Z][1-9]?_.*/[A-Z][1-9]?_.*\\.py$/' || resource =~ '/.*[A-Z][1-9]?_.*/[A-Z][1-9]?_.*\\.java$/'",
					"command": "codepal.submitProblem",
					"group": "navigation"
				},
				{
					"when": "resource =~ '/.*[A-Z][1-9]?_.*/[A-Z][1-9]?_.*\\.cpp$/' || resource =~ '/.*[A-Z][1-9]?_.*/[A-Z][1-9]?_.*\\.c$/' || resource =~ '/.*[A-Z][1-9]?_.*/[A-Z][1-9]?_.*\\.py$/' || resource =~ '/.*[A-Z][1-9]?_.*/[A-Z][1-9]?_.*\\.java$/'",
					"command": "codepal.openProblemStatement",
					"group": "navigation"
				},
				{
					"when": "resourceFilename != gen.cpp && resourceFilename != brute.cpp && resourceExtname == .cpp || resourceFilename != gen.c && resourceFilename != brute.c && resourceExtname == .c || resourceFilename != gen.py && resourceFilename != brute.py && resourceExtname == .py || resourceFilename != gen.java && resourceFilename != brute.java && resourceExtname == .java",
					"command": "codepal.stressTest",
					"group": "navigation"
				},
				{
					"when": "resourceFilename != gen.cpp && resourceFilename != brute.cpp && resourceExtname == .cpp || resourceFilename != gen.c && resourceFilename != brute.c && resourceExtname == .c || resourceFilename != gen.py && resourceFilename != brute.py && resourceExtname == .py || resourceFilename != gen.java && resourceFilename != brute.java && resourceExtname == .java",
					"command": "codepal.createStressTestingFiles",
					"group": "navigation"
				}
			]
		},
		"configuration": {
			"title": "codepal",
			"properties": {
				"codepal.compilationLanguage": {
					"type": "string",
					"default": "g++",
					"enum": [
						"g++",
						"gcc",
						"java",
						"python",
						"python2",
						"python3"
					],
					"markdownDescription": "Note : Incase of python please choose the python prefix you would generally use on your system to run"
				},
				"codepal.codeTemplatePath": {
					"type": "string",
					"default": "",
					"markdownDescription": "The path of the `template` that has to be used when a folder is created"
				},
				"codepal.g++ CompilationFlags": {
					"type": "string",
					"default": "-std=c++14",
					"markdownDescription": "Space separated additional compilation flags passed to g++"
				},
				"codepal.gccCompilationFlags": {
					"type": "string",
					"default": "",
					"markdownDescription": "Space separated additional compilation flags passed to gcc"
				},
				"codepal.pythonCompilationFlags": {
					"type": "string",
					"default": "",
					"markdownDescription": "Space separated additional compilation flags passed to python and python3"
				},
				"codepal.javaCompilationFlags": {
					"type": "string",
					"default": "",
					"markdownDescription": "Space separated additional compilation flags passed to java"
				},
				"codepal.codeforcesHandle": {
					"type": "string",
					"default": "",
					"markdownDescription": "Specify your handle on Codeforces to get a more personalized environment"
				},
				"codepal.numLimitOfTestCases": {
					"type": "number",
					"default": "",
					"markdownDescription": "Enter number of testcases the stress testing generator should make. [10-10000]"
				}
			}
		},
		"keybindings": [
			{
				"command": "codepal.stopStressTesting",
				"key": "ctrl+shift+z",
				"mac": "cmd+shift+z",
				"when": "editorTextFocus"
			}
		]
	},
	"scripts": {
		"vscode:prepublish": "yarn run package",
		"compile": "webpack --config ./build/node-extension.webpack.config.js",
		"watch": "webpack --watch --config ./build/node-extension.webpack.config.js",
		"package": "webpack --mode production --devtool hidden-source-map --config ./build/node-extension.webpack.config.js",
		"test-compile": "tsc -p ./",
		"test-watch": "tsc -watch -p ./",
		"pretest": "yarn run test-compile && yarn run lint",
		"lint": "eslint src --ext ts",
		"test": "node ./out/test/runTest.js"
	},
	"devDependencies": {
		"@types/cheerio": "^0.22.23",
		"@types/glob": "^7.1.3",
		"@types/mocha": "^8.0.4",
		"@types/node": "^14.11.2",
		"@types/node-fetch": "^2.5.7",
		"@types/selenium-webdriver": "^4.0.11",
		"@types/vscode": "^1.52.0",
		"@typescript-eslint/eslint-plugin": "^4.9.0",
		"@typescript-eslint/parser": "^4.9.0",
		"eslint": "^7.15.0",
		"glob": "^7.1.6",
		"mocha": "^8.1.3",
		"ts-loader": "^8.0.11",
		"typescript": "^4.1.2",
		"vscode-test": "^1.4.1",
		"webpack": "^5.10.0",
		"webpack-cli": "^4.2.0"
	},
	"dependencies": {
		"axios": "^0.21.1",
		"cheerio": "^1.0.0-rc.5",
		"child_process": "^1.0.2",
		"fs": "^0.0.1-security",
		"node-fetch": "^2.6.1"
	}
}
